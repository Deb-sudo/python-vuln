name: Example workflow for Python using Snyk

on: push

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v3
      #install dependecies
      - name: Install dependencies
        run: pip install -r requirements.txt
      # Step 2: Run Snyk to check for vulnerabilities
      - name: Run Snyk to check for vulnerabilities
        id: snyk-scan
        uses: snyk/actions/python@master
        continue-on-error: true # Allow the SARIF file to be uploaded even if this step fails
        env:
          SNYK_TOKEN: a1eb8b76-9f7f-4ff8-8fcb-e951abcdfa23
        with:
          args: --sarif-file-output=snyk.sarif --severity-threshold=high --fail-on=all

      # Step 3: Upload SARIF result to GitHub Code Scanning
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      # Step 4: Fail the workflow if Snyk found issues
      - name: Fail if Snyk found high or critical issues
        if: steps.snyk-scan.outcome == 'failure'
        run: |
          echo "High or critical vulnerabilities found by Snyk. Failing the workflow."
          exit 1







